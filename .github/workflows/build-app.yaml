name: build-app

on: [push]

jobs:
  # build-app:
  #   runs-on: ubuntu-latest #ou specifier la version souhaitée.
  #   steps:
  #     - uses: actions/checkout@v3 # on récupère le code du repo.
  #     - uses: actions/cache@v3
  #       id: npm-cache
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - name : "Install depts & build"
  #       run: |
  #         npm install
  #         npm run build

  # test-app:
    # needs: [build-app]
    # runs-on: ubuntu-latest #ou specifier la version souhaitée.
    # steps:
    #   - uses: actions/checkout@v3 # on récupère le code du repo.
    #   - uses: actions/cache@v3
    #     id: npm-cache
    #     with:
    #       path: |
    #         node_modules
    #         /home/runner/.cache/Cypress
    #       key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    #   - name: run tests
    #     run: npm run e2e:headless

    #   - name: Archive code coverage results
    #     uses: actions/upload-artifact@v3
    #     if: always() # meme si les run précédents fail, ça fera quand même l'action.
    #     with:
    #       name: e2e-tests
    #       path: cypress/videos

  deploy: 
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.7.0
        with:
            ssh-private-key: ${{ secrets.SSH }}
      - run: ssh -o StrictHostKeyChecking=no ${{ secrets.USER_AWS }}@${{ secrets.HOST }} "cd devops-app && git fetch && git pull && npm i && npm run build && pm2 restart next-app"